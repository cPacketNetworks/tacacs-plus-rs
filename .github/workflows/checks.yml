name: Code checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

jobs:
  formatting:
    name: Formatting check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Update Rust toolchain (stable)
        run: rustup update stable --no-self-update
      - name: Check formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        features: [std, no_std]
      fail-fast: false

    concurrency: cargodeps-${{ matrix.features }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Update Rust toolchain (stable)
        run: rustup update stable --no-self-update
      - name: Set up Rust artifact cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: cargodeps-${{ matrix.features }}
      - name: Run Clippy (${{ matrix.features }})
        run: cargo clippy --verbose ${{ matrix.features == 'no_std' && '--no-default-features' || '' }}
